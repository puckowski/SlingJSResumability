const{resolve:resolve}=require("path"),{readdir:readdir}=require("fs").promises;var fs=require("fs");const path=require("path");var crypto=require("crypto");process.argv.length<3&&(console.log("Usage: node .sling-resumable-cli.js src"),console.log("src should point to source directory"),process.exit());const myArgs=process.argv.slice(2);myArgs[0]="src";let serverRoot=myArgs[1];serverRoot&&""!==serverRoot||(serverRoot="server.js");let dirname=myArgs[0];dirname=dirname&&""!==dirname?path.join(__dirname,dirname):__dirname;const filePath=path.join(dirname,"dist_frontend"),filePathSerialized=path.join(dirname,"dist_backend"),filePathNodeModules=path.join(dirname,"node_modules"),filePathGit=path.join(dirname,".git"),lastForward=dirname.lastIndexOf("/"),lastBackward=dirname.lastIndexOf("\\");let filePathDistNodeModules="";if(lastForward>lastBackward){const e=dirname.substring(0,dirname.lastIndexOf("/"));filePathDistNodeModules=path.join(e,"dist"),filePathDistNodeModules=path.join(filePathDistNodeModules,"node_modules")}else{const e=dirname.substring(0,dirname.lastIndexOf("\\"));filePathDistNodeModules=path.join(e,"dist"),filePathDistNodeModules=path.join(filePathDistNodeModules,"node_modules")}function copyFileSync(e,t){var n=t;fs.existsSync(t)&&fs.lstatSync(t).isDirectory()&&(n=path.join(t,path.basename(e))),fs.writeFileSync(n,fs.readFileSync(e))}function copyFolderRecursiveSync(e,t){var n=path.join(t,path.basename(e));fs.existsSync(n)||fs.mkdirSync(n),fs.lstatSync(e).isDirectory()&&fs.readdirSync(e).forEach((function(t){var s=path.join(e,t);fs.lstatSync(s).isDirectory()?copyFolderRecursiveSync(s,n):copyFileSync(s,n)}))}async function*getFiles(e){const t=await readdir(e,{withFileTypes:!0});for(const n of t){const t=resolve(e,n.name);n.isDirectory()?yield*getFiles(t):yield t}}function occurrences(e,t,n){if(e+="",(t+="").length<=0)return e.length+1;for(var s=0,i=0,o=n?1:t.length;(i=e.indexOf(t,i))>=0;)++s,i+=o;return s}function removeCommentsFromLines(e){let t,n="",s=!1,i=[];for(let o=0;o<e.length;++o){s&&i.push(e[o-1]),n=e[o];let l=!1,r=!1,d=!1,c=!1;for(let a=0;a<n.length;++a)if('"'!==n[a]||r||l)if("'"!==n[a]||r||l)if('"'===n[a]&&l&&!d)r=!1,l=!1;else if("'"===n[a]&&r&&!d)r=!1,l=!1;else if('"'===n[a]&&l&&d)d=!1;else if("'"===n[a]&&r&&d)d=!1;else if("\\"===n[a])d=!0;else if("/"!==n[a]||c||r||l){if("/"===n[a]&&c&&!r&&!l){e[o]=e[o].substring(0,a-1);break}if("*"!==n[a]||!c||s||r||l)if("*"===n[a]&&s&&a+1<n.length&&"/"===n[a+1]&&!r&&!l){let n="",l=0;for(let e=0;e<i.length;++e)n+=i[e]+"\n";l=n.length;const r=(n+=e[o]).substring(0,t);let d="";l+a+2<n.length&&(d=n.substring(l+a+2,n.length));const c=o-i.length;for(;o>c;)e.splice(o,1),o--;e[o]=r+d,o--,s=!1,i=[],t=0}else c=!1,d=!1;else s=!0,t=a-1}else c=!0;else r=!0;else l=!0}}function removeQuotedData(e){let t="",n=!1,s=!1,i=!1;for(let o=0;o<e.length;++o)'"'!==e[o]||s||n?"'"!==e[o]||s||n?'"'===e[o]&&n&&!i?(s=!1,n=!1):"'"===e[o]&&s&&!i?(s=!1,n=!1):'"'===e[o]&&n&&i?i=!1:"'"===e[o]&&s&&i?i=!1:(i="\\"===e[o],t+=e[o]):s=!0:n=!0;return t}function seekToFirstUnquotedSemicolon(e){let t="",n=!1,s=!1,i=!1;for(let o=0;o<e.length&&('"'!==e[o]||s||n?"'"!==e[o]||s||n?'"'===e[o]&&n&&!i?(s=!1,n=!1):"'"===e[o]&&s&&!i?(s=!1,n=!1):i=('"'!==e[o]||!n||!i)&&(("'"!==e[o]||!s||!i)&&"\\"===e[o]):s=!0:n=!0,t+=e[o],";"!==e[o]||n||s);++o);return t}fs.mkdirSync(filePathDistNodeModules,{recursive:!0}),fs.mkdirSync(filePath,{recursive:!0}),fs.mkdirSync(filePathSerialized,{recursive:!0}),(async()=>{const e=new Set,t=new Map,n=new Map;for await(const s of getFiles(myArgs[0]))if(!(s.includes(filePath)||s.includes(filePathSerialized)||s.includes(filePathNodeModules)||s.includes(filePathGit)))if(s.endsWith("component.js")){const i=fs.readFileSync(s,{encoding:"utf-8"}).split(/\r?\n/);removeCommentsFromLines(i);let o=!1;const l=new Set;for(let r=0;r<i.length;++r){if(i[r].includes("import ")){let e=i[r].substring(i[r].indexOf("import"),i[r].length);e=seekToFirstUnquotedSemicolon(e),l.add(e)}if(i[r].includes("boundary")){console.log("Found boundary: "+i[r]);const d=i[r].substring(0,i[r].indexOf("boundary")),c=r;if(d.trim().endsWith("}")||0===d.trim().length){o=!0;let a=0,f=1,h="",u="",g=!0;do{g?(g=!1,h+=i[r].substring(i[r].indexOf("boundary"),i[r].length)):(h+="\n",h+=i[++r].substring(0,i[r].length));let e=h.indexOf("{")+1,t=removeQuotedData(u=h.substring(0,e));for(a=occurrences(t,"{",!1),f=occurrences(t,"}",!1);a!==f&&e<h.length;)e++,a=occurrences(t=removeQuotedData(u=h.substring(0,e)),"{",!1),f=occurrences(t,"}",!1)}while(a!==f);const p=h.substring(0,h.indexOf("(")).trim(),m=crypto.createHash("sha256").update(s+p).digest("hex"),y=h.substring(u.length,h.length),b=u.substring(0,u.indexOf("{")+1),S=u.lastIndexOf("}");let x=u.substring(u.indexOf("{")+1,S);const v=u.substring(S,u.length),P=b+(x=' import(/* webpackChunkName: "chunk'+m+"\" */ './chunk"+m+".js').then(module => { module.default(); });")+v;for(;r>c;)i.splice(r,1),r--;i[c]=d+P+y;let j="";for(let e=0;e<i.length;++e)j+=i[e]+"\n";const O=s.substring(dirname.length,s.length);let F="";for(let e=O.length-1;e>=0;--e){if("/"===O[e]||"\\"===O[e]){F=O[e]+F;break}F=O[e]+F}let k=path.join(filePath,O.substring(0,O.length-F.length));fs.existsSync(k)||fs.mkdirSync(k,{recursive:!0});const w=path.join(k,"chunk"+m+".js");k=path.join(filePath,O),fs.writeFileSync(k,j);const M="export function "+u+" export default "+p+";";fs.writeFileSync(w,M),e.add(w),t.set(w,"export function "+u),n.set(w,l)}}}if(!o){const e=s.substring(dirname.length,s.length);let t="";for(let n=e.length-1;n>=0;--n){if("/"===e[n]||"\\"===e[n]){t=e[n]+t;break}t=e[n]+t}let n=path.join(filePath,e.substring(0,e.length-t.length));fs.existsSync(n)||fs.mkdirSync(n,{recursive:!0}),n=path.join(filePath,e),fs.copyFileSync(s,n)}}else{const e=s.substring(dirname.length,s.length);let t="";for(let n=e.length-1;n>=0;--n){if("/"===e[n]||"\\"===e[n]){t=e[n]+t;break}t=e[n]+t}let n=path.join(filePath,e.substring(0,e.length-t.length));fs.existsSync(n)||fs.mkdirSync(n,{recursive:!0}),n=path.join(filePath,e),fs.copyFileSync(s,n)}(async()=>{for await(const e of getFiles(myArgs[0]))if(!(e.includes(filePathSerialized)||e.includes(filePath)||e.includes(filePathNodeModules)||e.includes(filePathGit)))if(e.endsWith("server.component.js")){const t=fs.readFileSync(e,{encoding:"utf-8"}).split(/\r?\n/);removeCommentsFromLines(t);let n=!1;const s=new Map;for(let i=0;i<t.length;++i)if(t[i].includes("boundary")){console.log("Found boundary: "+t[i]);const o=t[i].substring(0,t[i].indexOf("boundary"));if(o.trim().endsWith("}")||0===o.trim().length){n=!0;const o=t[i].substring(t[i].indexOf("boundary"),t[i].length),l=o.substring(0,o.indexOf("("));let r=s.get(e);r?(r.push(l),s.set(e,r)):(r=[l],s.set(e,r))}}if(n){n=!1;for(let i=0;i<t.length;++i)for(const[o,l]of s){const s=i;for(const s of l){const o="this."+s;if(t[i].includes(o)){let l=t[i];const r=[];for(;(!l.includes(":")||!t[i].includes("on"))&&i>0;)i--,r.push(i),l+="\n"+t[i];let d=l.indexOf(o);const c=d;let a=!1,f=!1,h=0;for(;d>0&&(!1===a||!1===f);)if(":"===l[--d]){const e=l.substring(d,c).trim();0!==e.length&&":"!==e||(a=!0,h=d)}else if("n"===l[d]&&a&&d>0&&"o"===l[--d]){const e=l.substring(d,h).trim();e.includes(" ")||e.includes(";")||(f=!0)}if(!0===a&&!0===f){let o=c,d=!1,a=!1,f=!0,h=0;const u=i;do{for(f?f=!1:(h+=t[i].length,i++,l+="\n"+t[i],r.push(i),o=0);o<t[i].length-1;){if(o++,"}"===t[i][o]||a&&","===t[i][o]){d=!0;break}")"===t[i][o]&&(a=!0)}}while(i<t.length-1&&!d);if(o===t[i].length&&(d=!0),d){o+=h;const i=crypto.createHash("sha256").update(e+s).digest("hex"),d=l.substring(0,c),a=l.substring(o,l.length),f="\" import('./chunk"+i+".js').then(module => { module.default(); });\"";t[u]=d+f+a,r.forEach(e=>{t.splice(e,1)});let g="";for(let e=0;e<t.length;++e)g+=t[e]+"\n";const p=e.substring(dirname.length,e.length);let m="";for(let e=p.length-1;e>=0;--e){if("/"===p[e]||"\\"===p[e]){m=p[e]+m;break}m=p[e]+m}let y=path.join(filePathSerialized,p.substring(0,p.length-m.length));fs.existsSync(y)||fs.mkdirSync(y,{recursive:!0}),y=path.join(filePathSerialized,p),fs.writeFileSync(y,g),n=!0}}}}n||(i=s)}}if(!n){const t=e.substring(dirname.length,e.length);let n="";for(let e=t.length-1;e>=0;--e){if("/"===t[e]||"\\"===t[e]){n=t[e]+n;break}n=t[e]+n}let s=path.join(filePathSerialized,t.substring(0,t.length-n.length));fs.existsSync(s)||fs.mkdirSync(s,{recursive:!0}),s=path.join(filePathSerialized,t),fs.copyFileSync(e,s)}}else if(e.endsWith(serverRoot)){const t=e.substring(dirname.length,e.length);let n="";for(let e=t.length-1;e>=0;--e){if("/"===t[e]||"\\"===t[e]){n=t[e]+n;break}n=t[e]+n}let s=path.join(filePathSerialized,t.substring(0,t.length-n.length));fs.existsSync(s)||fs.mkdirSync(s,{recursive:!0}),s=path.join(filePathSerialized,t),fs.copyFileSync(e,s)}const s=new Map;for(let t of e){const e=fs.readFileSync(t,{encoding:"utf-8"});String(e);s.set(t,e)}for(let i of e){let e="",o="";const l=s.get(i);for(const[e,n]of t)e!==i&&(o+=n);for(o=removeQuotedData(o),o+=" "+removeQuotedData(l);o.includes("import");){const e=o.substring(0,o.indexOf("import"));let t=o.substring(o.indexOf("import")+6,o.length);t=t.substring(t.indexOf(";")+1,t.length);let n=o.substring(o.indexOf("import"),o.length);n=n.substring(0,n.indexOf(";")),console.log("Removing import: '"+n+"'"),o=e+" "+t}const r=new Set;if(n.has(i)){const t=n.get(i);if(t.size>0){const n=[],s=new Map,i=new Set;t.forEach(e=>{const t=e.indexOf("'"),n=e.indexOf('"');if(t<n||-1===n){let n=e.substring(t+1,e.length);if(n.includes("/")){n=n.substring(0,n.indexOf("/"));const e=path.join(filePathNodeModules,n);i.has(e)||(copyFolderRecursiveSync(e,filePathDistNodeModules),i.add(e))}else if(n.includes("\\")){n=n.substring(0,n.indexOf("\\"));const e=path.join(filePathNodeModules,n);i.has(e)||(copyFolderRecursiveSync(e,filePathDistNodeModules),i.add(e))}else{n=n.substring(0,n.indexOf("'"));const e=path.join(filePathNodeModules,n);i.has(e)||(copyFolderRecursiveSync(e,filePathDistNodeModules),i.add(e))}}else{let t=e.substring(n+1,e.length);if(t.includes("/")){t=t.substring(0,t.indexOf("/"));const e=path.join(filePathNodeModules,t);i.has(e)||(copyFolderRecursiveSync(e,filePathDistNodeModules),i.add(e))}else if(t.includes("\\")){t=t.substring(0,t.indexOf("\\"));const e=path.join(filePathNodeModules,t);i.has(e)||(copyFolderRecursiveSync(e,filePathDistNodeModules),i.add(e))}else{t=t.substring(0,t.indexOf("'"));const e=path.join(filePathNodeModules,t);i.has(e)||(copyFolderRecursiveSync(e,filePathDistNodeModules),i.add(e))}}}),t.forEach(e=>{const t=removeQuotedData(e);if(t.includes("{")&&t.includes("}")){const i=new Set;let o=t.substring(t.indexOf("{")+1,t.length);if((o=o.substring(0,o.indexOf("}"))).includes(",")){const e=o.split(",");for(let t=0;t<e.length;++t)i.add(e[t].trim())}else o=o.trim(),i.add(o);i.forEach(t=>{n.push(t),s.set(t,e)})}else{let i=t.substring(t.indexOf("import")+6,t.length);i=(i=i.trim()).substring(0,i.indexOf(" ")),n.push(i),s.set(i,e)}}),n.sort((e,t)=>t.length-e.length||t.localeCompare(e)),t.forEach(t=>{const i=removeQuotedData(t);if(i.includes("{")&&i.includes("}")){const l=new Set;let d=i.substring(i.indexOf("{")+1,i.length);if((d=d.substring(0,d.indexOf("}"))).includes(",")){const e=d.split(",");for(let t=0;t<e.length;++t)l.add(e[t].trim())}else d=d.trim(),l.add(d);let c=!1;for(let t of l){const i=[];for(let e=0;e<n.length;++e)n[e].includes(t)&&n[e]!==t&&i.push(n[e]);let l=!1;for(let t=0;t<i.length;++t)if(o.includes(i[t])){l=!0,c=!0;const n=i[t],d=new RegExp(n,"g");o=o.replace(d,"");const a=s.get(i[t]);r.has(a)||(e+=a+"\n",console.log("Import: "+a),r.add(a))}if(l)break;if(!l&&o.includes(t)){c=!0;const e=new RegExp(t,"g");o=o.replace(e,"");break}}c&&!r.has(t)&&(e+=t+"\n",console.log("Import: "+t),r.add(t))}else{let l=i.substring(i.indexOf("import")+6,i.length);l=(l=l.trim()).substring(0,l.indexOf(" "));let d=!1;const c=[];for(let e=0;e<n.length;++e)n[e].includes(key)&&n[e]!==key&&c.push(n[e]);let a=!1;for(let t=0;t<c.length;++t)if(o.includes(c[t])){a=!0,d=!0;const n=c[t],i=new RegExp(n,"g");o=o.replace(i,"");const l=s.get(c[t]);r.has(l)||(e+=l+"\n",console.log("Import: "+l),r.add(l))}if(!a&&o.includes(l)){d=!0;const e=new RegExp(key,"g");o=o.replace(e,"")}d&&!r.has(t)&&(e+=t+"\n",console.log("Import: "+t),r.add(t))}})}}for(const[n,s]of t)n!==i&&(e+=s);fs.writeFileSync(i,e+"\n"+l)}})()})();